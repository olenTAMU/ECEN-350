$date
	Wed Nov  9 17:39:59 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module NextPCLogicTest $end
$var wire 64 ! NextPC [63:0] $end
$var reg 1 " ALUZero $end
$var reg 1 # Branch $end
$var reg 64 $ CurrentPC [63:0] $end
$var reg 64 % SignExtImm64 [63:0] $end
$var reg 1 & Uncondbranch $end
$var reg 8 ' passed [7:0] $end
$scope module uut $end
$var wire 1 " ALUZero $end
$var wire 1 # Branch $end
$var wire 64 ( CurrentPC [63:0] $end
$var wire 64 ) SignExtImm64 [63:0] $end
$var wire 1 & Uncondbranch $end
$var reg 64 * NextPC [63:0] $end
$upscope $end
$scope task allPassed $end
$var reg 8 + numTests [7:0] $end
$var reg 8 , passed [7:0] $end
$upscope $end
$scope task passTest $end
$var reg 65 - actualOut [64:0] $end
$var reg 65 . expectedOut [64:0] $end
$var reg 8 / passed [7:0] $end
$var reg 121 0 testType [120:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
bx .
bx -
bx ,
bx +
b101 *
b10101011110011010000000000000000 )
b1 (
b0 '
0&
b10101011110011010000000000000000 %
b1 $
0#
0"
b101 !
$end
#40000
1"
b1 '
b1 /
b1011011100110010000100000001111010100011000100000011000010110111001100100001000000100001000100000001111010010000001000110 0
b101 .
b101 -
#80000
b1111111111111111111111111111111101010100001100110000000000000000 %
b1111111111111111111111111111111101010100001100110000000000000000 )
0"
b10 '
b10 /
#120000
1"
b11 '
b11 /
#160000
b10101011110011010000000000000000 %
b10101011110011010000000000000000 )
1#
0"
b100 '
b100 /
#200000
b1 %
b1 )
1"
b101 '
b101 /
#240000
b100 %
b100 )
0"
b110 '
b110 /
#280000
b1001 $
b1001 (
b1111111111111111111111111111111111111111111111111111111111111111 %
b1111111111111111111111111111111111111111111111111111111111111111 )
1"
b111 '
b111 /
b1011011100110010000100000001111010101010000100000011000010110111001100100001000000100001000100000001111010010000001000110 0
#320000
b1 $
b1 (
b1 %
b1 )
0#
0"
1&
b1000 '
b1000 /
#360000
b1001 '
b1001 /
b1011011100110010000100000001111010100011000100000011000010110111001100100001000000100001000100000001111010010000001000110 0
#400000
b1001 $
b1001 (
b1111111111111111111111111111111111111111111111111111111111111111 %
b1111111111111111111111111111111111111111111111111111111111111111 )
b1010 '
b1010 /
#440000
b1011 '
b1011 /
#480000
b1100 +
b1100 ,
b1100 '
b1100 /
